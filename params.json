{"name":"Hula-lang","tagline":"Hula is a simple scripting language for writing applications. ","body":"# Hula-lang \r\n\r\nHula is a simple scripting language for writing applications. \r\n\r\nThe core language goals are:\r\n\r\n* Readability - scripts should be readable without knowing the syntax\r\n* Extensibility - it should be easy to plug in new functionality\r\n* Flexibility - scripts can be modified without a build\r\n\r\nHula was designed for orchestrating underlying services. As such:\r\n\r\n* Hula is good at object modelling and gluing together services\r\n* Hula is poor at capturing business logic - this should live in underlying services  \r\n\r\nAt present Hula is only compatible with Java-based codebases, but support for other languages could be added in the future.\r\n\r\n# Syntax\r\n\r\n\r\nAn example Hula script looks like this:\r\n\r\n```\r\nSet greeting=\"Hello, World!\"\r\nEcho $greeting\r\n```\r\n\r\nHula scripts contain a set of statements which generally follow this structure:\r\n\r\n```\r\nCommand parameter1Name=parameter1Value, parameter2Name=parameter2Value as returnVariable\r\n```\r\n\r\nIn the above script:\r\n\r\n* There are two statements which use the **Set** and **Echo** commands.\r\n* greeting is a parameter passed into the **Set** command, with value \"Hello, World!\"\r\n* $greeting is a reference to the greeting variable (created by the **Set** command).\r\n\r\nSome commands support nested statements, as shown below:\r\n\r\n```\r\nSet names=\"Jeff,Jim,John\"\r\n\r\n# turns the CSV string into a list\r\nTokenise $names as nameList\r\nLoop $nameList as name\r\n   Echo \"Hello, $name\"\r\n   \r\n   If $name = \"Jim\"\r\n       Echo \"I had an Uncle Jim\"\r\n   End\r\nEnd\r\n```\r\n\r\nFor further information please see the [Hula Language Guide](https://github.com/simoncurd/hula-lang/wiki/Hula-Language-Guide).\r\n\r\n# How it works\r\n\r\nHula scripts are parsed into BeanShell which is interpreted at execution time. Conditional logic is parsed by Antlr. \r\n\r\n# Getting Started\r\n\r\nHula-lang is packaged as an project which you can import directly into eclipse. \r\n\r\nAlternatively you can test Hula scripts using the supplied batch/shell scripts.\r\n\r\n**Windows:**\r\n\r\n\tHula Greetings\r\n\t\r\n**Linux/Mac:**\r\n\r\n\tHula.sh Greetings\r\n\r\nNote: \r\n* The test scripts live in test/scripts.\r\n* Javadocs available at [http://simoncurd.github.io/hula-lang/javadoc/]\r\n\r\n# Latest Version\r\n\r\n* The current release is version 0.1 alpha 1. \r\n\r\n# Roadmap\r\n\r\nKey Features for future versions:\r\n\r\n* A broader Command set\r\n* Performance improvements\r\n\r\n# Contributing\r\n\r\n* Please raise any issues in the github issue tracker\r\n\r\n# Author\r\n\r\n* http://github.com/simoncurd\r\n\r\n# Copyright and License\r\n\r\n[Apache 2 License]\r\n\r\nCopyright 2013 Simon Curd simoncurd@gmail.com\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\r\n\r\n[http://www.apache.org/licenses/LICENSE-2.0]\r\n\r\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}